680x0 MACRO ASSEMBLER   Version 5.00   (c) 1992-2005 Peter J. Fondse

Date: 25 Feb 2023      Time: 10:12:43          Source: C:\M68KV6.0-800BY480\PROGRAMS\DEBUGMONITORCODE\USER_PROGRAM.SRC

                       1          section   code
                       2   **********************************************************************************************************
                       3   * CSTART.ASM  -  C startup-code
                       4   *
                       5   *          Initialises the system prior to running the users main() program
                       6   *
                       7   *          1) Sets up the user program stack pointer
                       8   *          2) Switches to User mode in the 68000
                       9   *          3) Enables All Interrupts 1-7 on 68000
                      10   *          4) Copies all initialised C program variables from Rom to Ram prior to running main()
                      11   *
                      12   **********************************************************************************************************
00000000              13                   align
                      14   
                      15   
                      16   **********************************************************************************************************
                      17   * The Following ORG Statement marks the address of the start of the this CStart Program
                      18   *
                      19   * The debug Monitor and Flash Load and Program routines assume your program lives here
                      20   **********************************************************************************************************
08000000              21                   org       $08000000
08000000  46FC 2000   22   start:          move.w    #$2000,SR             clear interrupts to enable all, move to supervisor mode
                      23   
                      24   ******************************************************************************************
                      25   * Set unitialised global variables to 0 at startup
                      26   ******************************************************************************************
08000004  207C 0800   27   mainloop        movea.l   #BssStart,a0          point a0 to the start of the initialised data section held in ROM
08000008  0F1E      
0800000A  203C 0000   28                   move.l    #BssLength,d0         figure out how many bytes of C program variables data to copy
0800000E  001C      
08000010  6700 0024   29                   beq       go_main               if no data to copy go straight to program
08000014  10FC 0000   30   Zeroinit        move.b    #0,(a0)+              copy the C program initialise variables from rom to ram
08000018  5380        31                   subq.l    #1,d0
0800001A  66F8        32                   bne       Zeroinit
                      33   
                      34   *******************************************************************************************
                      35   * last minute initialisation before calling main
                      36   *******************************************************************************************
                      37   
0800001C  23FC FFFF   38                   move.l    #-1,__ungetbuf         required for use of scanf() etc in C programs
08000020  FFFF 0800 
08000024  0F12      
08000026  42B9 0800   39                   clr.l     __allocp               used by malloc() in C
0800002A  0F16      
0800002C  23FC 0800   40                   move.l    #heap,__heap           pointer to free memory
08000030  0F3A 0800 
08000034  0F1A      
08000036  4EB9 0800   41   go_main         jsr       _main
0800003A  0288      
0800003C  60C2        42                   bra       start
                      43   
                      44   ; C:\M68KV6.0-800BY480\PROGRAMS\DEBUGMONITORCODE\M68KUSERPROGRAM (DE1).C - Compiled by CC68K  Version 5.00 (c) 1991-2005  Peter J. Fondse
                      45   ; #include <stdio.h>
                      46   ; #include <string.h>
                      47   ; #include <ctype.h>
                      48   ; //IMPORTANT
                      49   ; //
                      50   ; // Uncomment one of the two #defines below
                      51   ; // Define StartOfExceptionVectorTable as 08030000 if running programs from sram or
                      52   ; // 0B000000 for running programs from dram
                      53   ; //
                      54   ; // In your labs, you will initially start by designing a system with SRam and later move to
                      55   ; // Dram, so these constants will need to be changed based on the version of the system you have
                      56   ; // building
                      57   ; //
                      58   ; // The working 68k system SOF file posted on canvas that you can use for your pre-lab
                      59   ; // is based around Dram so #define accordingly before building
                      60   ; //SRAM
                      61   ; //#define StartOfExceptionVectorTable 0x08030000
                      62   ; //DRAM
                      63   ; #define StartOfExceptionVectorTable 0x0B000000
                      64   ; /**********************************************************************************************
                      65   ; **	Parallel port addresses
                      66   ; **********************************************************************************************/
                      67   ; #define PortA   *(volatile unsigned char *)(0x00400000)
                      68   ; #define PortB   *(volatile unsigned char *)(0x00400002)
                      69   ; #define PortC   *(volatile unsigned char *)(0x00400004)
                      70   ; #define PortD   *(volatile unsigned char *)(0x00400006)
                      71   ; #define PortE   *(volatile unsigned char *)(0x00400008)
                      72   ; /*********************************************************************************************
                      73   ; **	Hex 7 seg displays port addresses
                      74   ; *********************************************************************************************/
                      75   ; #define HEX_A        *(volatile unsigned char *)(0x00400010)
                      76   ; #define HEX_B        *(volatile unsigned char *)(0x00400012)
                      77   ; #define HEX_C        *(volatile unsigned char *)(0x00400014)    // de2 only
                      78   ; #define HEX_D        *(volatile unsigned char *)(0x00400016)    // de2 only
                      79   ; /**********************************************************************************************
                      80   ; **	LCD display port addresses
                      81   ; **********************************************************************************************/
                      82   ; #define LCDcommand   *(volatile unsigned char *)(0x00400020)
                      83   ; #define LCDdata      *(volatile unsigned char *)(0x00400022)
                      84   ; /********************************************************************************************
                      85   ; **	Timer Port addresses
                      86   ; *********************************************************************************************/
                      87   ; #define Timer1Data      *(volatile unsigned char *)(0x00400030)
                      88   ; #define Timer1Control   *(volatile unsigned char *)(0x00400032)
                      89   ; #define Timer1Status    *(volatile unsigned char *)(0x00400032)
                      90   ; #define Timer2Data      *(volatile unsigned char *)(0x00400034)
                      91   ; #define Timer2Control   *(volatile unsigned char *)(0x00400036)
                      92   ; #define Timer2Status    *(volatile unsigned char *)(0x00400036)
                      93   ; #define Timer3Data      *(volatile unsigned char *)(0x00400038)
                      94   ; #define Timer3Control   *(volatile unsigned char *)(0x0040003A)
                      95   ; #define Timer3Status    *(volatile unsigned char *)(0x0040003A)
                      96   ; #define Timer4Data      *(volatile unsigned char *)(0x0040003C)
                      97   ; #define Timer4Control   *(volatile unsigned char *)(0x0040003E)
                      98   ; #define Timer4Status    *(volatile unsigned char *)(0x0040003E)
                      99   ; /*********************************************************************************************
                     100   ; **	RS232 port addresses
                     101   ; *********************************************************************************************/
                     102   ; #define RS232_Control     *(volatile unsigned char *)(0x00400040)
                     103   ; #define RS232_Status      *(volatile unsigned char *)(0x00400040)
                     104   ; #define RS232_TxData      *(volatile unsigned char *)(0x00400042)
                     105   ; #define RS232_RxData      *(volatile unsigned char *)(0x00400042)
                     106   ; #define RS232_Baud        *(volatile unsigned char *)(0x00400044)
                     107   ; /*********************************************************************************************
                     108   ; **	PIA 1 and 2 port addresses
                     109   ; *********************************************************************************************/
                     110   ; #define PIA1_PortA_Data     *(volatile unsigned char *)(0x00400050)         // combined data and data direction register share same address
                     111   ; #define PIA1_PortA_Control *(volatile unsigned char *)(0x00400052)
                     112   ; #define PIA1_PortB_Data     *(volatile unsigned char *)(0x00400054)         // combined data and data direction register share same address
                     113   ; #define PIA1_PortB_Control *(volatile unsigned char *)(0x00400056)
                     114   ; #define PIA2_PortA_Data     *(volatile unsigned char *)(0x00400060)         // combined data and data direction register share same address
                     115   ; #define PIA2_PortA_Control *(volatile unsigned char *)(0x00400062)
                     116   ; #define PIA2_PortB_data     *(volatile unsigned char *)(0x00400064)         // combined data and data direction register share same address
                     117   ; #define PIA2_PortB_Control *(volatile unsigned char *)(0x00400066)
                     118   ; /*********************************************************************************************************************************
                     119   ; (( DO NOT initialise global variables here, do it main even if you want 0
                     120   ; (( it's a limitation of the compiler
                     121   ; (( YOU HAVE BEEN WARNED
                     122   ; *********************************************************************************************************************************/
                     123   ; unsigned int i, x, y, z, PortA_Count;
                     124   ; unsigned char Timer1Count, Timer2Count, Timer3Count, Timer4Count ;
                     125   ; /*******************************************************************************************
                     126   ; ** Function Prototypes
                     127   ; *******************************************************************************************/
                     128   ; void Wait1ms(void);
                     129   ; void Wait3ms(void);
                     130   ; void Init_LCD(void) ;
                     131   ; void LCDOutchar(int c);
                     132   ; void LCDOutMess(char *theMessage);
                     133   ; void LCDClearln(void);
                     134   ; void LCDline1Message(char *theMessage);
                     135   ; void LCDline2Message(char *theMessage);
                     136   ; int sprintf(char *out, const char *format, ...) ;
                     137   ; /*****************************************************************************************
                     138   ; **	Interrupt service routine for Timers
                     139   ; **
                     140   ; **  Timers 1 - 4 share a common IRQ on the CPU  so this function uses polling to figure
                     141   ; **  out which timer is producing the interrupt
                     142   ; **
                     143   ; *****************************************************************************************/
                     144   ; void Timer_ISR()
                     145   ; {
                     146   _Timer_ISR:
                     147   ; if(Timer1Status == 1) {         // Did Timer 1 produce the Interrupt?
0800003E  1039 0040  148          move.b    4194354,D0
08000042  0032      
08000044  0C00 0001  149          cmp.b     #1,D0
08000048  661A       150          bne.s     Timer_ISR_1
                     151   ; Timer1Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
0800004A  13FC 0003  152          move.b    #3,4194354
0800004E  0040 0032 
                     153   ; PortA = Timer1Count++ ;     // increment an LED count on PortA with each tick of Timer 1
08000052  1039 0800  154          move.b    _Timer1Count.L,D0
08000056  0F32      
08000058  5239 0800  155          addq.b    #1,_Timer1Count.L
0800005C  0F32      
0800005E  13C0 0040  156          move.b    D0,4194304
08000062  0000      
                     157   Timer_ISR_1:
                     158   ; }
                     159   ; if(Timer2Status == 1) {         // Did Timer 2 produce the Interrupt?
08000064  1039 0040  160          move.b    4194358,D0
08000068  0036      
0800006A  0C00 0001  161          cmp.b     #1,D0
0800006E  661A       162          bne.s     Timer_ISR_3
                     163   ; Timer2Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000070  13FC 0003  164          move.b    #3,4194358
08000074  0040 0036 
                     165   ; PortC = Timer2Count++ ;     // increment an LED count on PortC with each tick of Timer 2
08000078  1039 0800  166          move.b    _Timer2Count.L,D0
0800007C  0F34      
0800007E  5239 0800  167          addq.b    #1,_Timer2Count.L
08000082  0F34      
08000084  13C0 0040  168          move.b    D0,4194308
08000088  0004      
                     169   Timer_ISR_3:
                     170   ; }
                     171   ; if(Timer3Status == 1) {         // Did Timer 3 produce the Interrupt?
0800008A  1039 0040  172          move.b    4194362,D0
0800008E  003A      
08000090  0C00 0001  173          cmp.b     #1,D0
08000094  661A       174          bne.s     Timer_ISR_5
                     175   ; Timer3Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
08000096  13FC 0003  176          move.b    #3,4194362
0800009A  0040 003A 
                     177   ; HEX_A = Timer3Count++ ;     // increment a HEX count on Port HEX_A with each tick of Timer 3
0800009E  1039 0800  178          move.b    _Timer3Count.L,D0
080000A2  0F36      
080000A4  5239 0800  179          addq.b    #1,_Timer3Count.L
080000A8  0F36      
080000AA  13C0 0040  180          move.b    D0,4194320
080000AE  0010      
                     181   Timer_ISR_5:
                     182   ; }
                     183   ; if(Timer4Status == 1) {         // Did Timer 4 produce the Interrupt?
080000B0  1039 0040  184          move.b    4194366,D0
080000B4  003E      
080000B6  0C00 0001  185          cmp.b     #1,D0
080000BA  661A       186          bne.s     Timer_ISR_7
                     187   ; Timer4Control = 3;      	// reset the timer to clear the interrupt, enable interrupts and allow counter to run
080000BC  13FC 0003  188          move.b    #3,4194366
080000C0  0040 003E 
                     189   ; HEX_B = Timer4Count++ ;     // increment a HEX count on HEX_B with each tick of Timer 4
080000C4  1039 0800  190          move.b    _Timer4Count.L,D0
080000C8  0F38      
080000CA  5239 0800  191          addq.b    #1,_Timer4Count.L
080000CE  0F38      
080000D0  13C0 0040  192          move.b    D0,4194322
080000D4  0012      
                     193   Timer_ISR_7:
080000D6  4E75       194          rts
                     195   ; }
                     196   ; }
                     197   ; /*****************************************************************************************
                     198   ; **	Interrupt service routine for ACIA. This device has it's own dedicate IRQ level
                     199   ; **  Add your code here to poll Status register and clear interrupt
                     200   ; *****************************************************************************************/
                     201   ; void ACIA_ISR()
                     202   ; {}
                     203   _ACIA_ISR:
080000D8  4E75       204          rts
                     205   ; /***************************************************************************************
                     206   ; **	Interrupt service routine for PIAs 1 and 2. These devices share an IRQ level
                     207   ; **  Add your code here to poll Status register and clear interrupt
                     208   ; *****************************************************************************************/
                     209   ; void PIA_ISR()
                     210   ; {}
                     211   _PIA_ISR:
080000DA  4E75       212          rts
                     213   ; /***********************************************************************************
                     214   ; **	Interrupt service routine for Key 2 on DE1 board. Add your own response here
                     215   ; ************************************************************************************/
                     216   ; void Key2PressISR()
                     217   ; {}
                     218   _Key2PressISR:
080000DC  4E75       219          rts
                     220   ; /***********************************************************************************
                     221   ; **	Interrupt service routine for Key 1 on DE1 board. Add your own response here
                     222   ; ************************************************************************************/
                     223   ; void Key1PressISR()
                     224   ; {}
                     225   _Key1PressISR:
080000DE  4E75       226          rts
                     227   ; /************************************************************************************
                     228   ; **   Delay Subroutine to give the 68000 something useless to do to waste 1 mSec
                     229   ; ************************************************************************************/
                     230   ; void Wait1ms(void)
                     231   ; {
                     232   _Wait1ms:
080000E0  2F02       233          move.l    D2,-(A7)
                     234   ; int  i ;
                     235   ; for(i = 0; i < 1000; i ++)
080000E2  4282       236          clr.l     D2
                     237   Wait1ms_1:
080000E4  0C82 0000  238          cmp.l     #1000,D2
080000E8  03E8      
080000EA  6C04       239          bge.s     Wait1ms_3
080000EC  5282       240          addq.l    #1,D2
080000EE  60F4       241          bra       Wait1ms_1
                     242   Wait1ms_3:
080000F0  241F       243          move.l    (A7)+,D2
080000F2  4E75       244          rts
                     245   ; ;
                     246   ; }
                     247   ; /************************************************************************************
                     248   ; **  Subroutine to give the 68000 something useless to do to waste 3 mSec
                     249   ; **************************************************************************************/
                     250   ; void Wait3ms(void)
                     251   ; {
                     252   _Wait3ms:
080000F4  2F02       253          move.l    D2,-(A7)
                     254   ; int i ;
                     255   ; for(i = 0; i < 3; i++)
080000F6  4282       256          clr.l     D2
                     257   Wait3ms_1:
080000F8  0C82 0000  258          cmp.l     #3,D2
080000FC  0003      
080000FE  6C0A       259          bge.s     Wait3ms_3
                     260   ; Wait1ms() ;
08000100  4EB9 0800  261          jsr       _Wait1ms
08000104  00E0      
08000106  5282       262          addq.l    #1,D2
08000108  60EE       263          bra       Wait3ms_1
                     264   Wait3ms_3:
0800010A  241F       265          move.l    (A7)+,D2
0800010C  4E75       266          rts
                     267   ; }
                     268   ; /*********************************************************************************************
                     269   ; **  Subroutine to initialise the LCD display by writing some commands to the LCD internal registers
                     270   ; **  Sets it for parallel port and 2 line display mode (if I recall correctly)
                     271   ; *********************************************************************************************/
                     272   ; void Init_LCD(void)
                     273   ; {
                     274   _Init_LCD:
                     275   ; LCDcommand = 0x0c ;
0800010E  13FC 000C  276          move.b    #12,4194336
08000112  0040 0020 
                     277   ; Wait3ms() ;
08000116  4EB9 0800  278          jsr       _Wait3ms
0800011A  00F4      
                     279   ; LCDcommand = 0x38 ;
0800011C  13FC 0038  280          move.b    #56,4194336
08000120  0040 0020 
                     281   ; Wait3ms() ;
08000124  4EB9 0800  282          jsr       _Wait3ms
08000128  00F4      
0800012A  4E75       283          rts
                     284   ; }
                     285   ; /*********************************************************************************************
                     286   ; **  Subroutine to initialise the RS232 Port by writing some commands to the internal registers
                     287   ; *********************************************************************************************/
                     288   ; void Init_RS232(void)
                     289   ; {
                     290   _Init_RS232:
                     291   ; RS232_Control = 0x15 ; //  %00010101 set up 6850 uses divide by 16 clock, set RTS low, 8 bits no parity, 1 stop bit, transmitter interrupt disabled
0800012C  13FC 0015  292          move.b    #21,4194368
08000130  0040 0040 
                     293   ; RS232_Baud = 0x1 ;      // program baud rate generator 001 = 115k, 010 = 57.6k, 011 = 38.4k, 100 = 19.2, all others = 9600
08000134  13FC 0001  294          move.b    #1,4194372
08000138  0040 0044 
0800013C  4E75       295          rts
                     296   ; }
                     297   ; /*********************************************************************************************************
                     298   ; **  Subroutine to provide a low level output function to 6850 ACIA
                     299   ; **  This routine provides the basic functionality to output a single character to the serial Port
                     300   ; **  to allow the board to communicate with HyperTerminal Program
                     301   ; **
                     302   ; **  NOTE you do not call this function directly, instead you call the normal putchar() function
                     303   ; **  which in turn calls _putch() below). Other functions like puts(), printf() call putchar() so will
                     304   ; **  call _putch() also
                     305   ; *********************************************************************************************************/
                     306   ; int _putch( int c)
                     307   ; {
                     308   __putch:
0800013E  4E56 0000  309          link      A6,#0
                     310   ; while((RS232_Status & (char)(0x02)) != (char)(0x02))    // wait for Tx bit in status register or 6850 serial comms chip to be '1'
                     311   _putch_1:
08000142  1039 0040  312          move.b    4194368,D0
08000146  0040      
08000148  C03C 0002  313          and.b     #2,D0
0800014C  0C00 0002  314          cmp.b     #2,D0
08000150  6702       315          beq.s     _putch_3
08000152  60EE       316          bra       _putch_1
                     317   _putch_3:
                     318   ; ;
                     319   ; RS232_TxData = (c & (char)(0x7f));                      // write to the data register to output the character (mask off bit 8 to keep it 7 bit ASCII)
08000154  202E 0008  320          move.l    8(A6),D0
08000158  C0BC 0000  321          and.l     #127,D0
0800015C  007F      
0800015E  13C0 0040  322          move.b    D0,4194370
08000162  0042      
                     323   ; return c ;                                              // putchar() expects the character to be returned
08000164  202E 0008  324          move.l    8(A6),D0
08000168  4E5E       325          unlk      A6
0800016A  4E75       326          rts
                     327   ; }
                     328   ; /*********************************************************************************************************
                     329   ; **  Subroutine to provide a low level input function to 6850 ACIA
                     330   ; **  This routine provides the basic functionality to input a single character from the serial Port
                     331   ; **  to allow the board to communicate with HyperTerminal Program Keyboard (your PC)
                     332   ; **
                     333   ; **  NOTE you do not call this function directly, instead you call the normal getchar() function
                     334   ; **  which in turn calls _getch() below). Other functions like gets(), scanf() call getchar() so will
                     335   ; **  call _getch() also
                     336   ; *********************************************************************************************************/
                     337   ; int _getch( void )
                     338   ; {
                     339   __getch:
0800016C  4E56 FFFC  340          link      A6,#-4
                     341   ; char c ;
                     342   ; while((RS232_Status & (char)(0x01)) != (char)(0x01))    // wait for Rx bit in 6850 serial comms chip status register to be '1'
                     343   _getch_1:
08000170  1039 0040  344          move.b    4194368,D0
08000174  0040      
08000176  C03C 0001  345          and.b     #1,D0
0800017A  0C00 0001  346          cmp.b     #1,D0
0800017E  6702       347          beq.s     _getch_3
08000180  60EE       348          bra       _getch_1
                     349   _getch_3:
                     350   ; ;
                     351   ; return (RS232_RxData & (char)(0x7f));                   // read received character, mask off top bit and return as 7 bit ASCII character
08000182  1039 0040  352          move.b    4194370,D0
08000186  0042      
08000188  C0BC 0000  353          and.l     #255,D0
0800018C  00FF      
0800018E  C0BC 0000  354          and.l     #127,D0
08000192  007F      
08000194  4E5E       355          unlk      A6
08000196  4E75       356          rts
                     357   ; }
                     358   ; /******************************************************************************
                     359   ; **  Subroutine to output a single character to the 2 row LCD display
                     360   ; **  It is assumed the character is an ASCII code and it will be displayed at the
                     361   ; **  current cursor position
                     362   ; *******************************************************************************/
                     363   ; void LCDOutchar(int c)
                     364   ; {
                     365   _LCDOutchar:
08000198  4E56 0000  366          link      A6,#0
                     367   ; LCDdata = (char)(c);
0800019C  202E 0008  368          move.l    8(A6),D0
080001A0  13C0 0040  369          move.b    D0,4194338
080001A4  0022      
                     370   ; Wait1ms() ;
080001A6  4EB9 0800  371          jsr       _Wait1ms
080001AA  00E0      
080001AC  4E5E       372          unlk      A6
080001AE  4E75       373          rts
                     374   ; }
                     375   ; /**********************************************************************************
                     376   ; *subroutine to output a message at the current cursor position of the LCD display
                     377   ; ************************************************************************************/
                     378   ; void LCDOutMessage(char *theMessage)
                     379   ; {
                     380   _LCDOutMessage:
080001B0  4E56 FFFC  381          link      A6,#-4
                     382   ; char c ;
                     383   ; while((c = *theMessage++) != 0)     // output characters from the string until NULL
                     384   LCDOutMessage_1:
080001B4  206E 0008  385          move.l    8(A6),A0
080001B8  52AE 0008  386          addq.l    #1,8(A6)
080001BC  1D50 FFFF  387          move.b    (A0),-1(A6)
080001C0  1010       388          move.b    (A0),D0
080001C2  6714       389          beq.s     LCDOutMessage_3
                     390   ; LCDOutchar(c) ;
080001C4  122E FFFF  391          move.b    -1(A6),D1
080001C8  4881       392          ext.w     D1
080001CA  48C1       393          ext.l     D1
080001CC  2F01       394          move.l    D1,-(A7)
080001CE  4EB9 0800  395          jsr       _LCDOutchar
080001D2  0198      
080001D4  584F       396          addq.w    #4,A7
080001D6  60DC       397          bra       LCDOutMessage_1
                     398   LCDOutMessage_3:
080001D8  4E5E       399          unlk      A6
080001DA  4E75       400          rts
                     401   ; }
                     402   ; /******************************************************************************
                     403   ; *subroutine to clear the line by issuing 24 space characters
                     404   ; *******************************************************************************/
                     405   ; void LCDClearln(void)
                     406   ; {
                     407   _LCDClearln:
080001DC  2F02       408          move.l    D2,-(A7)
                     409   ; int i ;
                     410   ; for(i = 0; i < 24; i ++)
080001DE  4282       411          clr.l     D2
                     412   LCDClearln_1:
080001E0  0C82 0000  413          cmp.l     #24,D2
080001E4  0018      
080001E6  6C10       414          bge.s     LCDClearln_3
                     415   ; LCDOutchar(' ') ;       // write a space char to the LCD display
080001E8  4878 0020  416          pea       32
080001EC  4EB9 0800  417          jsr       _LCDOutchar
080001F0  0198      
080001F2  584F       418          addq.w    #4,A7
080001F4  5282       419          addq.l    #1,D2
080001F6  60E8       420          bra       LCDClearln_1
                     421   LCDClearln_3:
080001F8  241F       422          move.l    (A7)+,D2
080001FA  4E75       423          rts
                     424   ; }
                     425   ; /******************************************************************************
                     426   ; **  Subroutine to move the LCD cursor to the start of line 1 and clear that line
                     427   ; *******************************************************************************/
                     428   ; void LCDLine1Message(char *theMessage)
                     429   ; {
                     430   _LCDLine1Message:
080001FC  4E56 0000  431          link      A6,#0
                     432   ; LCDcommand = 0x80 ;
08000200  13FC 0080  433          move.b    #128,4194336
08000204  0040 0020 
                     434   ; Wait3ms();
08000208  4EB9 0800  435          jsr       _Wait3ms
0800020C  00F4      
                     436   ; LCDClearln() ;
0800020E  4EB9 0800  437          jsr       _LCDClearln
08000212  01DC      
                     438   ; LCDcommand = 0x80 ;
08000214  13FC 0080  439          move.b    #128,4194336
08000218  0040 0020 
                     440   ; Wait3ms() ;
0800021C  4EB9 0800  441          jsr       _Wait3ms
08000220  00F4      
                     442   ; LCDOutMessage(theMessage) ;
08000222  2F2E 0008  443          move.l    8(A6),-(A7)
08000226  4EB9 0800  444          jsr       _LCDOutMessage
0800022A  01B0      
0800022C  584F       445          addq.w    #4,A7
0800022E  4E5E       446          unlk      A6
08000230  4E75       447          rts
                     448   ; }
                     449   ; /******************************************************************************
                     450   ; **  Subroutine to move the LCD cursor to the start of line 2 and clear that line
                     451   ; *******************************************************************************/
                     452   ; void LCDLine2Message(char *theMessage)
                     453   ; {
                     454   _LCDLine2Message:
08000232  4E56 0000  455          link      A6,#0
                     456   ; LCDcommand = 0xC0 ;
08000236  13FC 00C0  457          move.b    #192,4194336
0800023A  0040 0020 
                     458   ; Wait3ms();
0800023E  4EB9 0800  459          jsr       _Wait3ms
08000242  00F4      
                     460   ; LCDClearln() ;
08000244  4EB9 0800  461          jsr       _LCDClearln
08000248  01DC      
                     462   ; LCDcommand = 0xC0 ;
0800024A  13FC 00C0  463          move.b    #192,4194336
0800024E  0040 0020 
                     464   ; Wait3ms() ;
08000252  4EB9 0800  465          jsr       _Wait3ms
08000256  00F4      
                     466   ; LCDOutMessage(theMessage) ;
08000258  2F2E 0008  467          move.l    8(A6),-(A7)
0800025C  4EB9 0800  468          jsr       _LCDOutMessage
08000260  01B0      
08000262  584F       469          addq.w    #4,A7
08000264  4E5E       470          unlk      A6
08000266  4E75       471          rts
                     472   ; }
                     473   ; /*********************************************************************************************************************************
                     474   ; **  IMPORTANT FUNCTION
                     475   ; **  This function install an exception handler so you can capture and deal with any 68000 exception in your program
                     476   ; **  You pass it the name of a function in your code that will get called in response to the exception (as the 1st parameter)
                     477   ; **  and in the 2nd parameter, you pass it the exception number that you want to take over (see 68000 exceptions for details)
                     478   ; **  Calling this function allows you to deal with Interrupts for example
                     479   ; ***********************************************************************************************************************************/
                     480   ; void InstallExceptionHandler( void (*function_ptr)(), int level)
                     481   ; {
                     482   _InstallExceptionHandler:
08000268  4E56 FFFC  483          link      A6,#-4
                     484   ; volatile long int *RamVectorAddress = (volatile long int *)(StartOfExceptionVectorTable) ;   // pointer to the Ram based interrupt vector table created in Cstart in debug monitor
0800026C  2D7C 0B00  485          move.l    #184549376,-4(A6)
08000270  0000 FFFC 
                     486   ; RamVectorAddress[level] = (long int *)(function_ptr);                       // install the address of our function into the exception table
08000274  206E FFFC  487          move.l    -4(A6),A0
08000278  202E 000C  488          move.l    12(A6),D0
0800027C  E588       489          lsl.l     #2,D0
0800027E  21AE 0008  490          move.l    8(A6),0(A0,D0.L)
08000282  0800      
08000284  4E5E       491          unlk      A6
08000286  4E75       492          rts
                     493   ; }
                     494   ; /******************************************************************************************************************************
                     495   ; * Start of user program
                     496   ; ******************************************************************************************************************************/
                     497   ; void main()
                     498   ; {   
                     499   _main:
08000288  4E56 FF54  500          link      A6,#-172
0800028C  2F0A       501          move.l    A2,-(A7)
0800028E  45F9 0800  502          lea       _InstallExceptionHandler.L,A2
08000292  0268      
                     503   ; unsigned int row, i=0, count=0, counter1=1;
08000294  42AE FF58  504          clr.l     -168(A6)
08000298  42AE FF5C  505          clr.l     -164(A6)
0800029C  2D7C 0000  506          move.l    #1,-160(A6)
080002A0  0001 FF60 
                     507   ; char c, text[150] ;
                     508   ; int PassFailFlag = 1 ;
080002A4  2D7C 0000  509          move.l    #1,-4(A6)
080002A8  0001 FFFC 
                     510   ; i = x = y = z = PortA_Count =0;
080002AC  42B9 0800  511          clr.l     _PortA_Count.L
080002B0  0F2E      
080002B2  42B9 0800  512          clr.l     _z.L
080002B6  0F2A      
080002B8  42B9 0800  513          clr.l     _y.L
080002BC  0F26      
080002BE  42B9 0800  514          clr.l     _x.L
080002C2  0F22      
080002C4  42AE FF58  515          clr.l     -168(A6)
                     516   ; Timer1Count = Timer2Count = Timer3Count = Timer4Count = 0;
080002C8  4239 0800  517          clr.b     _Timer4Count.L
080002CC  0F38      
080002CE  4239 0800  518          clr.b     _Timer3Count.L
080002D2  0F36      
080002D4  4239 0800  519          clr.b     _Timer2Count.L
080002D8  0F34      
080002DA  4239 0800  520          clr.b     _Timer1Count.L
080002DE  0F32      
                     521   ; InstallExceptionHandler(PIA_ISR, 25) ;          // install interrupt handler for PIAs 1 and 2 on level 1 IRQ
080002E0  4878 0019  522          pea       25
080002E4  4879 0800  523          pea       _PIA_ISR.L
080002E8  00DA      
080002EA  4E92       524          jsr       (A2)
080002EC  504F       525          addq.w    #8,A7
                     526   ; InstallExceptionHandler(ACIA_ISR, 26) ;		    // install interrupt handler for ACIA on level 2 IRQ
080002EE  4878 001A  527          pea       26
080002F2  4879 0800  528          pea       _ACIA_ISR.L
080002F6  00D8      
080002F8  4E92       529          jsr       (A2)
080002FA  504F       530          addq.w    #8,A7
                     531   ; InstallExceptionHandler(Timer_ISR, 27) ;		// install interrupt handler for Timers 1-4 on level 3 IRQ
080002FC  4878 001B  532          pea       27
08000300  4879 0800  533          pea       _Timer_ISR.L
08000304  003E      
08000306  4E92       534          jsr       (A2)
08000308  504F       535          addq.w    #8,A7
                     536   ; InstallExceptionHandler(Key2PressISR, 28) ;	    // install interrupt handler for Key Press 2 on DE1 board for level 4 IRQ
0800030A  4878 001C  537          pea       28
0800030E  4879 0800  538          pea       _Key2PressISR.L
08000312  00DC      
08000314  4E92       539          jsr       (A2)
08000316  504F       540          addq.w    #8,A7
                     541   ; InstallExceptionHandler(Key1PressISR, 29) ;	    // install interrupt handler for Key Press 1 on DE1 board for level 5 IRQ
08000318  4878 001D  542          pea       29
0800031C  4879 0800  543          pea       _Key1PressISR.L
08000320  00DE      
08000322  4E92       544          jsr       (A2)
08000324  504F       545          addq.w    #8,A7
                     546   ; Timer1Data = 0x10;		// program time delay into timers 1-4
08000326  13FC 0010  547          move.b    #16,4194352
0800032A  0040 0030 
                     548   ; Timer2Data = 0x20;
0800032E  13FC 0020  549          move.b    #32,4194356
08000332  0040 0034 
                     550   ; Timer3Data = 0x15;
08000336  13FC 0015  551          move.b    #21,4194360
0800033A  0040 0038 
                     552   ; Timer4Data = 0x25;
0800033E  13FC 0025  553          move.b    #37,4194364
08000342  0040 003C 
                     554   ; Timer1Control = 3;		// write 3 to control register to Bit0 = 1 (enable interrupt from timers) 1 - 4 and allow them to count Bit 1 = 1
08000346  13FC 0003  555          move.b    #3,4194354
0800034A  0040 0032 
                     556   ; Timer2Control = 3;
0800034E  13FC 0003  557          move.b    #3,4194358
08000352  0040 0036 
                     558   ; Timer3Control = 3;
08000356  13FC 0003  559          move.b    #3,4194362
0800035A  0040 003A 
                     560   ; Timer4Control = 3;
0800035E  13FC 0003  561          move.b    #3,4194366
08000362  0040 003E 
                     562   ; Init_LCD();             // initialise the LCD display to use a parallel data interface and 2 lines of display
08000366  4EB9 0800  563          jsr       _Init_LCD
0800036A  010E      
                     564   ; Init_RS232() ;          // initialise the RS232 port for use with hyper terminal
0800036C  4EB9 0800  565          jsr       _Init_RS232
08000370  012C      
                     566   ; /************************************************************************************************
                     567   ; **  Test of scanf function
                     568   ; ************************************************************************************************/
                     569   ; /*scanflush() ;                       // flush any text that may have been typed ahead
                     570   ; printf("\r\nEnter Integer: ") ;
                     571   ; scanf("%d", &i) ;
                     572   ; printf("You entered %d", i) ;
                     573   ; sprintf(text, "Hello CPEN 412 Student") ;
                     574   ; LCDLine1Message(text) ;
                     575   ; printf("\r\nHello CPEN 412 Student\r\nYour LEDs should be Flashing") ;
                     576   ; printf("\r\nYour LCD should be displaying") ;
                     577   ; while(1)
                     578   ; ;*/
                     579   ; printf("\r\nBig Brother is watching you");
08000372  4879 0800  580          pea       @m68kus~1_1.L
08000376  0DE6      
08000378  4EB9 0800  581          jsr       _printf
0800037C  0382      
0800037E  584F       582          addq.w    #4,A7
                     583   ; while(1)
                     584   main_1:
08000380  60FE       585          bra       main_1
                     586   ; ;
                     587   ; // programs should NOT exit as there is nothing to Exit TO !!!!!!
                     588   ; // There is no OS - just press the reset button to end program and call debug
                     589   ; }
                     590   _printf:
08000382  4E56 FFFC  591          link      A6,#-4
08000386  2F02       592          move.l    D2,-(A7)
08000388  41EE 0008  593          lea       8(A6),A0
0800038C  5848       594          addq.w    #4,A0
0800038E  2408       595          move.l    A0,D2
08000390  2F02       596          move.l    D2,-(A7)
08000392  2F2E 0008  597          move.l    8(A6),-(A7)
08000396  42A7       598          clr.l     -(A7)
08000398  4EB9 0800  599          jsr       _doprint
0800039C  045A      
0800039E  DEFC 000C  600          add.w     #12,A7
080003A2  2D40 FFFC  601          move.l    D0,-4(A6)
080003A6  4282       602          clr.l     D2
080003A8  202E FFFC  603          move.l    -4(A6),D0
080003AC  241F       604          move.l    (A7)+,D2
080003AE  4E5E       605          unlk      A6
080003B0  4E75       606          rts
                     607   @doprint_copy:
080003B2  4E56 0000  608          link      A6,#0
080003B6  206E 0008  609          move.l    8(A6),A0
080003BA  4A90       610          tst.l     (A0)
080003BC  6710       611          beq.s     @doprint_copy_1
080003BE  202E 000C  612          move.l    12(A6),D0
080003C2  206E 0008  613          move.l    8(A6),A0
080003C6  2250       614          move.l    (A0),A1
080003C8  5290       615          addq.l    #1,(A0)
080003CA  1280       616          move.b    D0,(A1)
080003CC  600C       617          bra.s     @doprint_copy_2
                     618   @doprint_copy_1:
080003CE  2F2E 000C  619          move.l    12(A6),-(A7)
080003D2  4EB9 0800  620          jsr       _putch
080003D6  0CAC      
080003D8  584F       621          addq.w    #4,A7
                     622   @doprint_copy_2:
080003DA  4E5E       623          unlk      A6
080003DC  4E75       624          rts
                     625   @doprint_getval:
080003DE  4E56 0000  626          link      A6,#0
080003E2  48E7 3000  627          movem.l   D2/D3,-(A7)
080003E6  262E 0008  628          move.l    8(A6),D3
080003EA  4282       629          clr.l     D2
080003EC  2043       630          move.l    D3,A0
080003EE  2050       631          move.l    (A0),A0
080003F0  1010       632          move.b    (A0),D0
080003F2  0C00 002A  633          cmp.b     #42,D0
080003F6  6612       634          bne.s     @doprint_getval_1
080003F8  206E 000C  635          move.l    12(A6),A0
080003FC  2250       636          move.l    (A0),A1
080003FE  5890       637          addq.l    #4,(A0)
08000400  2411       638          move.l    (A1),D2
08000402  2043       639          move.l    D3,A0
08000404  5290       640          addq.l    #1,(A0)
08000406  6000 0048  641          bra       @doprint_getval_5
                     642   @doprint_getval_1:
0800040A  7001       643          moveq     #1,D0
0800040C  2043       644          move.l    D3,A0
0800040E  2050       645          move.l    (A0),A0
08000410  1210       646          move.b    (A0),D1
08000412  4881       647          ext.w     D1
08000414  48C1       648          ext.l     D1
08000416  D081       649          add.l     D1,D0
08000418  41F9 0800  650          lea       __ctype.L,A0
0800041C  0E10      
0800041E  1030 0800  651          move.b    0(A0,D0.L),D0
08000422  C03C 0004  652          and.b     #4,D0
08000426  6728       653          beq.s     @doprint_getval_5
08000428  2F02       654          move.l    D2,-(A7)
0800042A  4878 000A  655          pea       10
0800042E  4EB9 0800  656          jsr       LMUL
08000432  0C0C      
08000434  2017       657          move.l    (A7),D0
08000436  504F       658          addq.w    #8,A7
08000438  2043       659          move.l    D3,A0
0800043A  2250       660          move.l    (A0),A1
0800043C  5290       661          addq.l    #1,(A0)
0800043E  1211       662          move.b    (A1),D1
08000440  4881       663          ext.w     D1
08000442  48C1       664          ext.l     D1
08000444  D081       665          add.l     D1,D0
08000446  0480 0000  666          sub.l     #48,D0
0800044A  0030      
0800044C  2400       667          move.l    D0,D2
0800044E  60BA       668          bra       @doprint_getval_1
                     669   @doprint_getval_5:
08000450  2002       670          move.l    D2,D0
08000452  4CDF 000C  671          movem.l   (A7)+,D2/D3
08000456  4E5E       672          unlk      A6
08000458  4E75       673          rts
                     674   _doprint:
0800045A  4E56 FFCC  675          link      A6,#-52
0800045E  48E7 3F3C  676          movem.l   D2/D3/D4/D5/D6/D7/A2/A3/A4/A5,-(A7)
08000462  45EE 0008  677          lea       8(A6),A2
08000466  47F9 0800  678          lea       @doprint_copy.L,A3
0800046A  03B2      
0800046C  49F9 0800  679          lea       _ultoa.L,A4
08000470  0B94      
08000472  4286       680          clr.l     D6
                     681   doprint_1:
08000474  206E 000C  682          move.l    12(A6),A0
08000478  4A10       683          tst.b     (A0)
0800047A  6700 05F0  684          beq       doprint_3
0800047E  206E 000C  685          move.l    12(A6),A0
08000482  1010       686          move.b    (A0),D0
08000484  0C00 0025  687          cmp.b     #37,D0
08000488  671C       688          beq.s     doprint_4
0800048A  206E 000C  689          move.l    12(A6),A0
0800048E  52AE 000C  690          addq.l    #1,12(A6)
08000492  1210       691          move.b    (A0),D1
08000494  4881       692          ext.w     D1
08000496  48C1       693          ext.l     D1
08000498  2F01       694          move.l    D1,-(A7)
0800049A  2F0A       695          move.l    A2,-(A7)
0800049C  4E93       696          jsr       (A3)
0800049E  504F       697          addq.w    #8,A7
080004A0  5286       698          addq.l    #1,D6
080004A2  6000 05C4  699          bra       doprint_2
                     700   doprint_4:
080004A6  52AE 000C  701          addq.l    #1,12(A6)
080004AA  422E FFD3  702          clr.b     -45(A6)
080004AE  422E FFD2  703          clr.b     -46(A6)
080004B2  422E FFD0  704          clr.b     -48(A6)
080004B6  422E FFCF  705          clr.b     -49(A6)
080004BA  422E FFCE  706          clr.b     -50(A6)
080004BE  422E FFCD  707          clr.b     -51(A6)
080004C2  42AE FFFC  708          clr.l     -4(A6)
080004C6  7AFF       709          moveq     #-1,D5
080004C8  41EE FFDC  710          lea       -36(A6),A0
080004CC  2608       711          move.l    A0,D3
080004CE  2408       712          move.l    A0,D2
                     713   doprint_6:
080004D0  206E 000C  714          move.l    12(A6),A0
080004D4  1010       715          move.b    (A0),D0
080004D6  4880       716          ext.w     D0
080004D8  48C0       717          ext.l     D0
080004DA  0C80 0000  718          cmp.l     #43,D0
080004DE  002B      
080004E0  6730       719          beq.s     doprint_12
080004E2  6E18       720          bgt.s     doprint_15
080004E4  0C80 0000  721          cmp.l     #35,D0
080004E8  0023      
080004EA  6700 003E  722          beq       doprint_14
080004EE  6E00 0046  723          bgt       doprint_9
080004F2  0C80 0000  724          cmp.l     #32,D0
080004F6  0020      
080004F8  6724       725          beq.s     doprint_13
080004FA  603A       726          bra.s     doprint_9
                     727   doprint_15:
080004FC  0C80 0000  728          cmp.l     #45,D0
08000500  002D      
08000502  6702       729          beq.s     doprint_11
08000504  6030       730          bra.s     doprint_9
                     731   doprint_11:
08000506  1D7C 0001  732          move.b    #1,-51(A6)
0800050A  FFCD      
0800050C  52AE 000C  733          addq.l    #1,12(A6)
08000510  6026       734          bra.s     doprint_7
                     735   doprint_12:
08000512  1D7C 0001  736          move.b    #1,-50(A6)
08000516  FFCE      
08000518  52AE 000C  737          addq.l    #1,12(A6)
0800051C  601A       738          bra.s     doprint_7
                     739   doprint_13:
0800051E  1D7C 0001  740          move.b    #1,-49(A6)
08000522  FFCF      
08000524  52AE 000C  741          addq.l    #1,12(A6)
08000528  600E       742          bra.s     doprint_7
                     743   doprint_14:
0800052A  1D7C 0001  744          move.b    #1,-48(A6)
0800052E  FFD0      
08000530  52AE 000C  745          addq.l    #1,12(A6)
08000534  6002       746          bra.s     doprint_7
                     747   doprint_9:
08000536  6002       748          bra.s     doprint_8
                     749   doprint_7:
08000538  6096       750          bra       doprint_6
                     751   doprint_8:
0800053A  206E 000C  752          move.l    12(A6),A0
0800053E  1010       753          move.b    (A0),D0
08000540  0C00 0030  754          cmp.b     #48,D0
08000544  660A       755          bne.s     doprint_16
08000546  52AE 000C  756          addq.l    #1,12(A6)
0800054A  1D7C 0001  757          move.b    #1,-46(A6)
0800054E  FFD2      
                     758   doprint_16:
08000550  486E 0010  759          pea       16(A6)
08000554  486E 000C  760          pea       12(A6)
08000558  4EB9 0800  761          jsr       @doprint_getval
0800055C  03DE      
0800055E  504F       762          addq.w    #8,A7
08000560  2A40       763          move.l    D0,A5
08000562  206E 000C  764          move.l    12(A6),A0
08000566  1010       765          move.b    (A0),D0
08000568  0C00 002E  766          cmp.b     #46,D0
0800056C  6616       767          bne.s     doprint_18
0800056E  52AE 000C  768          addq.l    #1,12(A6)
08000572  486E 0010  769          pea       16(A6)
08000576  486E 000C  770          pea       12(A6)
0800057A  4EB9 0800  771          jsr       @doprint_getval
0800057E  03DE      
08000580  504F       772          addq.w    #8,A7
08000582  2A00       773          move.l    D0,D5
                     774   doprint_18:
08000584  206E 000C  775          move.l    12(A6),A0
08000588  1010       776          move.b    (A0),D0
0800058A  0C00 006C  777          cmp.b     #108,D0
0800058E  660A       778          bne.s     doprint_20
08000590  52AE 000C  779          addq.l    #1,12(A6)
08000594  1D7C 0001  780          move.b    #1,-45(A6)
08000598  FFD3      
                     781   doprint_20:
0800059A  206E 000C  782          move.l    12(A6),A0
0800059E  1010       783          move.b    (A0),D0
080005A0  4880       784          ext.w     D0
080005A2  48C0       785          ext.l     D0
080005A4  0C80 0000  786          cmp.l     #111,D0
080005A8  006F      
080005AA  6700 00D8  787          beq       doprint_27
080005AE  6E34       788          bgt.s     doprint_33
080005B0  0C80 0000  789          cmp.l     #100,D0
080005B4  0064      
080005B6  6700 0054  790          beq       doprint_24
080005BA  6E1C       791          bgt.s     doprint_34
080005BC  0C80 0000  792          cmp.l     #99,D0
080005C0  0063      
080005C2  6700 0130  793          beq       doprint_30
080005C6  6E00 0174  794          bgt       doprint_22
080005CA  0C80 0000  795          cmp.l     #88,D0
080005CE  0058      
080005D0  6700 00EA  796          beq       doprint_28
080005D4  6000 0166  797          bra       doprint_22
                     798   doprint_34:
080005D8  0C80 0000  799          cmp.l     #105,D0
080005DC  0069      
080005DE  672C       800          beq.s     doprint_24
080005E0  6000 015A  801          bra       doprint_22
                     802   doprint_33:
080005E4  0C80 0000  803          cmp.l     #117,D0
080005E8  0075      
080005EA  6700 0060  804          beq       doprint_26
080005EE  6E0E       805          bgt.s     doprint_35
080005F0  0C80 0000  806          cmp.l     #115,D0
080005F4  0073      
080005F6  6700 0124  807          beq       doprint_31
080005FA  6000 0140  808          bra       doprint_22
                     809   doprint_35:
080005FE  0C80 0000  810          cmp.l     #120,D0
08000602  0078      
08000604  6700 00B6  811          beq       doprint_28
08000608  6000 0132  812          bra       doprint_22
                     813   doprint_24:
0800060C  4A2E FFD3  814          tst.b     -45(A6)
08000610  671C       815          beq.s     doprint_36
08000612  4878 000A  816          pea       10
08000616  2F03       817          move.l    D3,-(A7)
08000618  206E 0010  818          move.l    16(A6),A0
0800061C  58AE 0010  819          addq.l    #4,16(A6)
08000620  2F10       820          move.l    (A0),-(A7)
08000622  4EB9 0800  821          jsr       _ltoa
08000626  0B0C      
08000628  DEFC 000C  822          add.w     #12,A7
0800062C  601A       823          bra.s     doprint_37
                     824   doprint_36:
0800062E  4878 000A  825          pea       10
08000632  2F03       826          move.l    D3,-(A7)
08000634  206E 0010  827          move.l    16(A6),A0
08000638  58AE 0010  828          addq.l    #4,16(A6)
0800063C  2F10       829          move.l    (A0),-(A7)
0800063E  4EB9 0800  830          jsr       _ltoa
08000642  0B0C      
08000644  DEFC 000C  831          add.w     #12,A7
                     832   doprint_37:
08000648  6000 0100  833          bra       doprint_23
                     834   doprint_26:
0800064C  4A2E FFD3  835          tst.b     -45(A6)
08000650  6718       836          beq.s     doprint_38
08000652  4878 000A  837          pea       10
08000656  2F03       838          move.l    D3,-(A7)
08000658  206E 0010  839          move.l    16(A6),A0
0800065C  58AE 0010  840          addq.l    #4,16(A6)
08000660  2F10       841          move.l    (A0),-(A7)
08000662  4E94       842          jsr       (A4)
08000664  DEFC 000C  843          add.w     #12,A7
08000668  6016       844          bra.s     doprint_39
                     845   doprint_38:
0800066A  4878 000A  846          pea       10
0800066E  2F03       847          move.l    D3,-(A7)
08000670  206E 0010  848          move.l    16(A6),A0
08000674  58AE 0010  849          addq.l    #4,16(A6)
08000678  2F10       850          move.l    (A0),-(A7)
0800067A  4E94       851          jsr       (A4)
0800067C  DEFC 000C  852          add.w     #12,A7
                     853   doprint_39:
08000680  6000 00C8  854          bra       doprint_23
                     855   doprint_27:
08000684  4A2E FFD3  856          tst.b     -45(A6)
08000688  6718       857          beq.s     doprint_40
0800068A  4878 0008  858          pea       8
0800068E  2F03       859          move.l    D3,-(A7)
08000690  206E 0010  860          move.l    16(A6),A0
08000694  58AE 0010  861          addq.l    #4,16(A6)
08000698  2F10       862          move.l    (A0),-(A7)
0800069A  4E94       863          jsr       (A4)
0800069C  DEFC 000C  864          add.w     #12,A7
080006A0  6016       865          bra.s     doprint_41
                     866   doprint_40:
080006A2  4878 0008  867          pea       8
080006A6  2F03       868          move.l    D3,-(A7)
080006A8  206E 0010  869          move.l    16(A6),A0
080006AC  58AE 0010  870          addq.l    #4,16(A6)
080006B0  2F10       871          move.l    (A0),-(A7)
080006B2  4E94       872          jsr       (A4)
080006B4  DEFC 000C  873          add.w     #12,A7
                     874   doprint_41:
080006B8  6000 0090  875          bra       doprint_23
                     876   doprint_28:
080006BC  4A2E FFD3  877          tst.b     -45(A6)
080006C0  6718       878          beq.s     doprint_42
080006C2  4878 0010  879          pea       16
080006C6  2F03       880          move.l    D3,-(A7)
080006C8  206E 0010  881          move.l    16(A6),A0
080006CC  58AE 0010  882          addq.l    #4,16(A6)
080006D0  2F10       883          move.l    (A0),-(A7)
080006D2  4E94       884          jsr       (A4)
080006D4  DEFC 000C  885          add.w     #12,A7
080006D8  6016       886          bra.s     doprint_43
                     887   doprint_42:
080006DA  4878 0010  888          pea       16
080006DE  2F03       889          move.l    D3,-(A7)
080006E0  206E 0010  890          move.l    16(A6),A0
080006E4  58AE 0010  891          addq.l    #4,16(A6)
080006E8  2F10       892          move.l    (A0),-(A7)
080006EA  4E94       893          jsr       (A4)
080006EC  DEFC 000C  894          add.w     #12,A7
                     895   doprint_43:
080006F0  6000 0058  896          bra       doprint_23
                     897   doprint_30:
080006F4  206E 0010  898          move.l    16(A6),A0
080006F8  58AE 0010  899          addq.l    #4,16(A6)
080006FC  2010       900          move.l    (A0),D0
080006FE  2042       901          move.l    D2,A0
08000700  5282       902          addq.l    #1,D2
08000702  1080       903          move.b    D0,(A0)
08000704  2042       904          move.l    D2,A0
08000706  4210       905          clr.b     (A0)
08000708  200D       906          move.l    A5,D0
0800070A  6704       907          beq.s     doprint_44
0800070C  200D       908          move.l    A5,D0
0800070E  6006       909          bra.s     doprint_45
                     910   doprint_44:
08000710  7001       911          moveq     #1,D0
08000712  4880       912          ext.w     D0
08000714  48C0       913          ext.l     D0
                     914   doprint_45:
08000716  2A00       915          move.l    D0,D5
08000718  6000 0030  916          bra       doprint_23
                     917   doprint_31:
0800071C  206E 0010  918          move.l    16(A6),A0
08000720  58AE 0010  919          addq.l    #4,16(A6)
08000724  2610       920          move.l    (A0),D3
08000726  0C85 FFFF  921          cmp.l     #-1,D5
0800072A  FFFF      
0800072C  660C       922          bne.s     doprint_46
0800072E  2F03       923          move.l    D3,-(A7)
08000730  4EB9 0800  924          jsr       _strlen
08000734  0C9A      
08000736  584F       925          addq.w    #4,A7
08000738  2A00       926          move.l    D0,D5
                     927   doprint_46:
0800073A  600E       928          bra.s     doprint_23
                     929   doprint_22:
0800073C  206E 000C  930          move.l    12(A6),A0
08000740  2242       931          move.l    D2,A1
08000742  5282       932          addq.l    #1,D2
08000744  1290       933          move.b    (A0),(A1)
08000746  2042       934          move.l    D2,A0
08000748  4210       935          clr.b     (A0)
                     936   doprint_23:
0800074A  2F03       937          move.l    D3,-(A7)
0800074C  4EB9 0800  938          jsr       _strlen
08000750  0C9A      
08000752  584F       939          addq.w    #4,A7
08000754  1800       940          move.b    D0,D4
08000756  206E 000C  941          move.l    12(A6),A0
0800075A  1010       942          move.b    (A0),D0
0800075C  0C00 0073  943          cmp.b     #115,D0
08000760  661C       944          bne.s     doprint_48
08000762  0C85 0000  945          cmp.l     #0,D5
08000766  0000      
08000768  6D14       946          blt.s     doprint_48
0800076A  4884       947          ext.w     D4
0800076C  48C4       948          ext.l     D4
0800076E  B885       949          cmp.l     D5,D4
08000770  6F04       950          ble.s     doprint_50
08000772  2005       951          move.l    D5,D0
08000774  6006       952          bra.s     doprint_51
                     953   doprint_50:
08000776  1004       954          move.b    D4,D0
08000778  4880       955          ext.w     D0
0800077A  48C0       956          ext.l     D0
                     957   doprint_51:
0800077C  1800       958          move.b    D0,D4
                     959   doprint_48:
0800077E  206E 000C  960          move.l    12(A6),A0
08000782  1010       961          move.b    (A0),D0
08000784  0C00 0058  962          cmp.b     #88,D0
08000788  6600 0028  963          bne       doprint_56
0800078C  41EE FFDC  964          lea       -36(A6),A0
08000790  2408       965          move.l    A0,D2
                     966   doprint_54:
08000792  2042       967          move.l    D2,A0
08000794  4A10       968          tst.b     (A0)
08000796  671A       969          beq.s     doprint_56
08000798  2042       970          move.l    D2,A0
0800079A  1210       971          move.b    (A0),D1
0800079C  4881       972          ext.w     D1
0800079E  48C1       973          ext.l     D1
080007A0  2F01       974          move.l    D1,-(A7)
080007A2  4EB9 0800  975          jsr       _toupper
080007A6  0CDC      
080007A8  584F       976          addq.w    #4,A7
080007AA  2042       977          move.l    D2,A0
080007AC  1080       978          move.b    D0,(A0)
080007AE  5282       979          addq.l    #1,D2
080007B0  60E0       980          bra       doprint_54
                     981   doprint_56:
080007B2  7E00       982          moveq     #0,D7
080007B4  41EE FFD4  983          lea       -44(A6),A0
080007B8  2408       984          move.l    A0,D2
080007BA  206E 000C  985          move.l    12(A6),A0
080007BE  1010       986          move.b    (A0),D0
080007C0  0C00 0064  987          cmp.b     #100,D0
080007C4  670E       988          beq.s     doprint_59
080007C6  206E 000C  989          move.l    12(A6),A0
080007CA  1010       990          move.b    (A0),D0
080007CC  0C00 0069  991          cmp.b     #105,D0
080007D0  6600 0068  992          bne       doprint_65
                     993   doprint_59:
080007D4  102E FFCE  994          move.b    -50(A6),D0
080007D8  4880       995          ext.w     D0
080007DA  48C0       996          ext.l     D0
080007DC  4A80       997          tst.l     D0
080007DE  660C       998          bne.s     doprint_62
080007E0  2043       999          move.l    D3,A0
080007E2  1010      1000          move.b    (A0),D0
080007E4  0C00 002D 1001          cmp.b     #45,D0
080007E8  6600 0028 1002          bne       doprint_60
                    1003   doprint_62:
080007EC  2043      1004          move.l    D3,A0
080007EE  1010      1005          move.b    (A0),D0
080007F0  0C00 002D 1006          cmp.b     #45,D0
080007F4  660E      1007          bne.s     doprint_63
080007F6  2043      1008          move.l    D3,A0
080007F8  5283      1009          addq.l    #1,D3
080007FA  2242      1010          move.l    D2,A1
080007FC  5282      1011          addq.l    #1,D2
080007FE  1290      1012          move.b    (A0),(A1)
08000800  5304      1013          subq.b    #1,D4
08000802  6008      1014          bra.s     doprint_64
                    1015   doprint_63:
08000804  2042      1016          move.l    D2,A0
08000806  5282      1017          addq.l    #1,D2
08000808  10BC 002B 1018          move.b    #43,(A0)
                    1019   doprint_64:
0800080C  5287      1020          addq.l    #1,D7
0800080E  6000 002A 1021          bra       doprint_65
                    1022   doprint_60:
08000812  4A2E FFCF 1023          tst.b     -49(A6)
08000816  6722      1024          beq.s     doprint_65
08000818  2043      1025          move.l    D3,A0
0800081A  1010      1026          move.b    (A0),D0
0800081C  0C00 002D 1027          cmp.b     #45,D0
08000820  660E      1028          bne.s     doprint_67
08000822  2043      1029          move.l    D3,A0
08000824  5283      1030          addq.l    #1,D3
08000826  2242      1031          move.l    D2,A1
08000828  5282      1032          addq.l    #1,D2
0800082A  1290      1033          move.b    (A0),(A1)
0800082C  5304      1034          subq.b    #1,D4
0800082E  6008      1035          bra.s     doprint_68
                    1036   doprint_67:
08000830  2042      1037          move.l    D2,A0
08000832  5282      1038          addq.l    #1,D2
08000834  10BC 0020 1039          move.b    #32,(A0)
                    1040   doprint_68:
08000838  5287      1041          addq.l    #1,D7
                    1042   doprint_65:
0800083A  4A2E FFD0 1043          tst.b     -48(A6)
0800083E  6700 005A 1044          beq       doprint_77
08000842  206E 000C 1045          move.l    12(A6),A0
08000846  1010      1046          move.b    (A0),D0
08000848  4880      1047          ext.w     D0
0800084A  48C0      1048          ext.l     D0
0800084C  0C80 0000 1049          cmp.l     #111,D0
08000850  006F      
08000852  671A      1050          beq.s     doprint_73
08000854  6E0C      1051          bgt.s     doprint_76
08000856  0C80 0000 1052          cmp.l     #88,D0
0800085A  0058      
0800085C  6710      1053          beq.s     doprint_73
0800085E  6000 003A 1054          bra       doprint_77
                    1055   doprint_76:
08000862  0C80 0000 1056          cmp.l     #120,D0
08000866  0078      
08000868  6704      1057          beq.s     doprint_73
0800086A  6000 002E 1058          bra       doprint_77
                    1059   doprint_73:
0800086E  2042      1060          move.l    D2,A0
08000870  5282      1061          addq.l    #1,D2
08000872  10BC 0030 1062          move.b    #48,(A0)
08000876  5287      1063          addq.l    #1,D7
08000878  206E 000C 1064          move.l    12(A6),A0
0800087C  1010      1065          move.b    (A0),D0
0800087E  0C00 0078 1066          cmp.b     #120,D0
08000882  670C      1067          beq.s     doprint_79
08000884  206E 000C 1068          move.l    12(A6),A0
08000888  1010      1069          move.b    (A0),D0
0800088A  0C00 0058 1070          cmp.b     #88,D0
0800088E  660A      1071          bne.s     doprint_77
                    1072   doprint_79:
08000890  2042      1073          move.l    D2,A0
08000892  5282      1074          addq.l    #1,D2
08000894  10BC 0078 1075          move.b    #120,(A0)
08000898  5287      1076          addq.l    #1,D7
                    1077   doprint_77:
0800089A  2042      1078          move.l    D2,A0
0800089C  4210      1079          clr.b     (A0)
0800089E  206E 000C 1080          move.l    12(A6),A0
080008A2  1010      1081          move.b    (A0),D0
080008A4  4880      1082          ext.w     D0
080008A6  48C0      1083          ext.l     D0
080008A8  0C80 0000 1084          cmp.l     #105,D0
080008AC  0069      
080008AE  6700 0076 1085          beq       doprint_82
080008B2  6E42      1086          bgt.s     doprint_93
080008B4  0C80 0000 1087          cmp.l     #99,D0
080008B8  0063      
080008BA  6700 0084 1088          beq       doprint_96
080008BE  6E1C      1089          bgt.s     doprint_94
080008C0  0C80 0000 1090          cmp.l     #88,D0
080008C4  0058      
080008C6  6700 005E 1091          beq       doprint_82
080008CA  6E00 0184 1092          bgt       doprint_80
080008CE  0C80 0000 1093          cmp.l     #69,D0
080008D2  0045      
080008D4  6700 0050 1094          beq       doprint_82
080008D8  6000 0176 1095          bra       doprint_80
                    1096   doprint_94:
080008DC  0C80 0000 1097          cmp.l     #101,D0
080008E0  0065      
080008E2  6700 0042 1098          beq       doprint_82
080008E6  6E00 0168 1099          bgt       doprint_80
080008EA  0C80 0000 1100          cmp.l     #100,D0
080008EE  0064      
080008F0  6734      1101          beq.s     doprint_82
080008F2  6000 015C 1102          bra       doprint_80
                    1103   doprint_93:
080008F6  0C80 0000 1104          cmp.l     #117,D0
080008FA  0075      
080008FC  6728      1105          beq.s     doprint_82
080008FE  6E1A      1106          bgt.s     doprint_95
08000900  0C80 0000 1107          cmp.l     #115,D0
08000904  0073      
08000906  6700 0038 1108          beq       doprint_96
0800090A  6E00 0144 1109          bgt       doprint_80
0800090E  0C80 0000 1110          cmp.l     #111,D0
08000912  006F      
08000914  6710      1111          beq.s     doprint_82
08000916  6000 0138 1112          bra       doprint_80
                    1113   doprint_95:
0800091A  0C80 0000 1114          cmp.l     #120,D0
0800091E  0078      
08000920  6704      1115          beq.s     doprint_82
08000922  6000 012C 1116          bra       doprint_80
                    1117   doprint_82:
08000926  4A2E FFD2 1118          tst.b     -46(A6)
0800092A  6714      1119          beq.s     doprint_96
0800092C  4A2E FFCD 1120          tst.b     -51(A6)
08000930  660E      1121          bne.s     doprint_96
08000932  200D      1122          move.l    A5,D0
08000934  9087      1123          sub.l     D7,D0
08000936  4884      1124          ext.w     D4
08000938  48C4      1125          ext.l     D4
0800093A  9084      1126          sub.l     D4,D0
0800093C  2D40 FFFC 1127          move.l    D0,-4(A6)
                    1128   doprint_96:
08000940  202E FFFC 1129          move.l    -4(A6),D0
08000944  0C80 0000 1130          cmp.l     #0,D0
08000948  0000      
0800094A  6C04      1131          bge.s     doprint_98
0800094C  42AE FFFC 1132          clr.l     -4(A6)
                    1133   doprint_98:
08000950  4A2E FFCD 1134          tst.b     -51(A6)
08000954  6600 0030 1135          bne       doprint_104
08000958  1004      1136          move.b    D4,D0
0800095A  4880      1137          ext.w     D0
0800095C  48C0      1138          ext.l     D0
0800095E  D0AE FFFC 1139          add.l     -4(A6),D0
08000962  D087      1140          add.l     D7,D0
08000964  1D40 FFD1 1141          move.b    D0,-47(A6)
                    1142   doprint_102:
08000968  102E FFD1 1143          move.b    -47(A6),D0
0800096C  4880      1144          ext.w     D0
0800096E  48C0      1145          ext.l     D0
08000970  220D      1146          move.l    A5,D1
08000972  534D      1147          subq.w    #1,A5
08000974  B081      1148          cmp.l     D1,D0
08000976  6C0E      1149          bge.s     doprint_104
08000978  4878 0020 1150          pea       32
0800097C  2F0A      1151          move.l    A2,-(A7)
0800097E  4E93      1152          jsr       (A3)
08000980  504F      1153          addq.w    #8,A7
08000982  5286      1154          addq.l    #1,D6
08000984  60E2      1155          bra       doprint_102
                    1156   doprint_104:
08000986  41EE FFD4 1157          lea       -44(A6),A0
0800098A  2408      1158          move.l    A0,D2
                    1159   doprint_105:
0800098C  2042      1160          move.l    D2,A0
0800098E  4A10      1161          tst.b     (A0)
08000990  6716      1162          beq.s     doprint_107
08000992  2042      1163          move.l    D2,A0
08000994  5282      1164          addq.l    #1,D2
08000996  1210      1165          move.b    (A0),D1
08000998  4881      1166          ext.w     D1
0800099A  48C1      1167          ext.l     D1
0800099C  2F01      1168          move.l    D1,-(A7)
0800099E  2F0A      1169          move.l    A2,-(A7)
080009A0  4E93      1170          jsr       (A3)
080009A2  504F      1171          addq.w    #8,A7
080009A4  5286      1172          addq.l    #1,D6
080009A6  60E4      1173          bra       doprint_105
                    1174   doprint_107:
080009A8  202E FFFC 1175          move.l    -4(A6),D0
080009AC  1D40 FFD1 1176          move.b    D0,-47(A6)
                    1177   doprint_108:
080009B0  102E FFD1 1178          move.b    -47(A6),D0
080009B4  532E FFD1 1179          subq.b    #1,-47(A6)
080009B8  4A00      1180          tst.b     D0
080009BA  670E      1181          beq.s     doprint_110
080009BC  4878 0030 1182          pea       48
080009C0  2F0A      1183          move.l    A2,-(A7)
080009C2  4E93      1184          jsr       (A3)
080009C4  504F      1185          addq.w    #8,A7
080009C6  5286      1186          addq.l    #1,D6
080009C8  60E6      1187          bra       doprint_108
                    1188   doprint_110:
080009CA  2043      1189          move.l    D3,A0
080009CC  4A10      1190          tst.b     (A0)
080009CE  6700 0048 1191          beq       doprint_113
080009D2  206E 000C 1192          move.l    12(A6),A0
080009D6  1010      1193          move.b    (A0),D0
080009D8  4880      1194          ext.w     D0
080009DA  48C0      1195          ext.l     D0
080009DC  0C80 0000 1196          cmp.l     #115,D0
080009E0  0073      
080009E2  670C      1197          beq.s     doprint_116
080009E4  6E18      1198          bgt.s     doprint_119
080009E6  0C80 0000 1199          cmp.l     #99,D0
080009EA  0063      
080009EC  6702      1200          beq.s     doprint_116
080009EE  600E      1201          bra.s     doprint_119
                    1202   doprint_116:
080009F0  2005      1203          move.l    D5,D0
080009F2  5385      1204          subq.l    #1,D5
080009F4  0C80 0000 1205          cmp.l     #0,D0
080009F8  0000      
080009FA  6E02      1206          bgt.s     doprint_119
080009FC  6016      1207          bra.s     doprint_115
                    1208   doprint_119:
080009FE  2043      1209          move.l    D3,A0
08000A00  5283      1210          addq.l    #1,D3
08000A02  1210      1211          move.b    (A0),D1
08000A04  4881      1212          ext.w     D1
08000A06  48C1      1213          ext.l     D1
08000A08  2F01      1214          move.l    D1,-(A7)
08000A0A  2F0A      1215          move.l    A2,-(A7)
08000A0C  4E93      1216          jsr       (A3)
08000A0E  504F      1217          addq.w    #8,A7
08000A10  5286      1218          addq.l    #1,D6
08000A12  6002      1219          bra.s     doprint_112
                    1220   doprint_115:
08000A14  6002      1221          bra.s     doprint_113
                    1222   doprint_112:
08000A16  60B2      1223          bra       doprint_110
                    1224   doprint_113:
08000A18  4A2E FFCD 1225          tst.b     -51(A6)
08000A1C  6700 0030 1226          beq       doprint_125
08000A20  1004      1227          move.b    D4,D0
08000A22  4880      1228          ext.w     D0
08000A24  48C0      1229          ext.l     D0
08000A26  D0AE FFFC 1230          add.l     -4(A6),D0
08000A2A  D087      1231          add.l     D7,D0
08000A2C  1D40 FFD1 1232          move.b    D0,-47(A6)
                    1233   doprint_123:
08000A30  102E FFD1 1234          move.b    -47(A6),D0
08000A34  4880      1235          ext.w     D0
08000A36  48C0      1236          ext.l     D0
08000A38  220D      1237          move.l    A5,D1
08000A3A  534D      1238          subq.w    #1,A5
08000A3C  B081      1239          cmp.l     D1,D0
08000A3E  6C0E      1240          bge.s     doprint_125
08000A40  4878 0020 1241          pea       32
08000A44  2F0A      1242          move.l    A2,-(A7)
08000A46  4E93      1243          jsr       (A3)
08000A48  504F      1244          addq.w    #8,A7
08000A4A  5386      1245          subq.l    #1,D6
08000A4C  60E2      1246          bra       doprint_123
                    1247   doprint_125:
08000A4E  6014      1248          bra.s     doprint_81
                    1249   doprint_80:
08000A50  206E 000C 1250          move.l    12(A6),A0
08000A54  1210      1251          move.b    (A0),D1
08000A56  4881      1252          ext.w     D1
08000A58  48C1      1253          ext.l     D1
08000A5A  2F01      1254          move.l    D1,-(A7)
08000A5C  2F0A      1255          move.l    A2,-(A7)
08000A5E  4E93      1256          jsr       (A3)
08000A60  504F      1257          addq.w    #8,A7
08000A62  5286      1258          addq.l    #1,D6
                    1259   doprint_81:
08000A64  52AE 000C 1260          addq.l    #1,12(A6)
                    1261   doprint_2:
08000A68  6000 FA0A 1262          bra       doprint_1
                    1263   doprint_3:
08000A6C  4A92      1264          tst.l     (A2)
08000A6E  6710      1265          beq.s     doprint_126
08000A70  4201      1266          clr.b     D1
08000A72  C2BC 0000 1267          and.l     #255,D1
08000A76  00FF      
08000A78  2F01      1268          move.l    D1,-(A7)
08000A7A  2F0A      1269          move.l    A2,-(A7)
08000A7C  4E93      1270          jsr       (A3)
08000A7E  504F      1271          addq.w    #8,A7
                    1272   doprint_126:
08000A80  2006      1273          move.l    D6,D0
08000A82  4CDF 3CFC 1274          movem.l   (A7)+,D2/D3/D4/D5/D6/D7/A2/A3/A4/A5
08000A86  4E5E      1275          unlk      A6
08000A88  4E75      1276          rts
                    1277   @itoa_convert:
08000A8A  4E56 0000 1278          link      A6,#0
08000A8E  48E7 3C00 1279          movem.l   D2/D3/D4/D5,-(A7)
08000A92  242E 0008 1280          move.l    8(A6),D2
08000A96  262E 0010 1281          move.l    16(A6),D3
08000A9A  2A2E 000C 1282          move.l    12(A6),D5
08000A9E  2F05      1283          move.l    D5,-(A7)
08000AA0  2F03      1284          move.l    D3,-(A7)
08000AA2  4EB9 0800 1285          jsr       ULDIV
08000AA6  0D08      
08000AA8  202F 0004 1286          move.l    4(A7),D0
08000AAC  504F      1287          addq.w    #8,A7
08000AAE  2800      1288          move.l    D0,D4
08000AB0  BA83      1289          cmp.l     D3,D5
08000AB2  6520      1290          blo.s     @itoa_convert_1
08000AB4  2F03      1291          move.l    D3,-(A7)
08000AB6  2F05      1292          move.l    D5,-(A7)
08000AB8  2F03      1293          move.l    D3,-(A7)
08000ABA  4EB9 0800 1294          jsr       ULDIV
08000ABE  0D08      
08000AC0  2217      1295          move.l    (A7),D1
08000AC2  504F      1296          addq.w    #8,A7
08000AC4  2F01      1297          move.l    D1,-(A7)
08000AC6  2F02      1298          move.l    D2,-(A7)
08000AC8  4EB9 0800 1299          jsr       @itoa_convert
08000ACC  0A8A      
08000ACE  DEFC 000C 1300          add.w     #12,A7
08000AD2  2400      1301          move.l    D0,D2
                    1302   @itoa_convert_1:
08000AD4  0C84 0000 1303          cmp.l     #9,D4
08000AD8  0009      
08000ADA  6E0E      1304          bgt.s     @itoa_convert_3
08000ADC  2004      1305          move.l    D4,D0
08000ADE  7230      1306          moveq     #48,D1
08000AE0  C2BC 0000 1307          and.l     #255,D1
08000AE4  00FF      
08000AE6  D081      1308          add.l     D1,D0
08000AE8  6012      1309          bra.s     @itoa_convert_4
                    1310   @itoa_convert_3:
08000AEA  2004      1311          move.l    D4,D0
08000AEC  7261      1312          moveq     #97,D1
08000AEE  C2BC 0000 1313          and.l     #255,D1
08000AF2  00FF      
08000AF4  D081      1314          add.l     D1,D0
08000AF6  0480 0000 1315          sub.l     #10,D0
08000AFA  000A      
                    1316   @itoa_convert_4:
08000AFC  2042      1317          move.l    D2,A0
08000AFE  1080      1318          move.b    D0,(A0)
08000B00  2002      1319          move.l    D2,D0
08000B02  5280      1320          addq.l    #1,D0
08000B04  4CDF 003C 1321          movem.l   (A7)+,D2/D3/D4/D5
08000B08  4E5E      1322          unlk      A6
08000B0A  4E75      1323          rts
                    1324   _ltoa:
08000B0C  4E56 0000 1325          link      A6,#0
08000B10  48E7 3C00 1326          movem.l   D2/D3/D4/D5,-(A7)
08000B14  242E 0008 1327          move.l    8(A6),D2
08000B18  262E 000C 1328          move.l    12(A6),D3
08000B1C  2A2E 0010 1329          move.l    16(A6),D5
08000B20  2803      1330          move.l    D3,D4
08000B22  0C85 0000 1331          cmp.l     #2,D5
08000B26  0002      
08000B28  6D08      1332          blt.s     ltoa_3
08000B2A  0C85 0000 1333          cmp.l     #36,D5
08000B2E  0024      
08000B30  6F06      1334          ble.s     ltoa_1
                    1335   ltoa_3:
08000B32  2003      1336          move.l    D3,D0
08000B34  6000 0056 1337          bra       ltoa_4
                    1338   ltoa_1:
08000B38  0C85 0000 1339          cmp.l     #10,D5
08000B3C  000A      
08000B3E  6600 0034 1340          bne       ltoa_5
08000B42  0C82 0000 1341          cmp.l     #0,D2
08000B46  0000      
08000B48  6C2A      1342          bge.s     ltoa_5
08000B4A  2002      1343          move.l    D2,D0
08000B4C  4480      1344          neg.l     D0
08000B4E  2400      1345          move.l    D0,D2
08000B50  0C82 0000 1346          cmp.l     #0,D2
08000B54  0000      
08000B56  6C14      1347          bge.s     ltoa_7
08000B58  4879 0800 1348          pea       @itoa_1.L
08000B5C  0E04      
08000B5E  2F03      1349          move.l    D3,-(A7)
08000B60  4EB9 0800 1350          jsr       _strcpy
08000B64  0CF8      
08000B66  504F      1351          addq.w    #8,A7
08000B68  2003      1352          move.l    D3,D0
08000B6A  6020      1353          bra.s     ltoa_4
                    1354   ltoa_7:
08000B6C  2044      1355          move.l    D4,A0
08000B6E  5284      1356          addq.l    #1,D4
08000B70  10BC 002D 1357          move.b    #45,(A0)
                    1358   ltoa_5:
08000B74  2F05      1359          move.l    D5,-(A7)
08000B76  2F02      1360          move.l    D2,-(A7)
08000B78  2F04      1361          move.l    D4,-(A7)
08000B7A  4EB9 0800 1362          jsr       @itoa_convert
08000B7E  0A8A      
08000B80  DEFC 000C 1363          add.w     #12,A7
08000B84  2800      1364          move.l    D0,D4
08000B86  2044      1365          move.l    D4,A0
08000B88  4210      1366          clr.b     (A0)
08000B8A  2003      1367          move.l    D3,D0
                    1368   ltoa_4:
08000B8C  4CDF 003C 1369          movem.l   (A7)+,D2/D3/D4/D5
08000B90  4E5E      1370          unlk      A6
08000B92  4E75      1371          rts
                    1372   _ultoa:
08000B94  4E56 0000 1373          link      A6,#0
08000B98  48E7 3800 1374          movem.l   D2/D3/D4,-(A7)
08000B9C  262E 0010 1375          move.l    16(A6),D3
08000BA0  282E 000C 1376          move.l    12(A6),D4
08000BA4  2404      1377          move.l    D4,D2
08000BA6  0C83 0000 1378          cmp.l     #2,D3
08000BAA  0002      
08000BAC  6D08      1379          blt.s     ultoa_3
08000BAE  0C83 0000 1380          cmp.l     #36,D3
08000BB2  0024      
08000BB4  6F04      1381          ble.s     ultoa_1
                    1382   ultoa_3:
08000BB6  2004      1383          move.l    D4,D0
08000BB8  601A      1384          bra.s     ultoa_4
                    1385   ultoa_1:
08000BBA  2F03      1386          move.l    D3,-(A7)
08000BBC  2F2E 0008 1387          move.l    8(A6),-(A7)
08000BC0  2F02      1388          move.l    D2,-(A7)
08000BC2  4EB9 0800 1389          jsr       @itoa_convert
08000BC6  0A8A      
08000BC8  DEFC 000C 1390          add.w     #12,A7
08000BCC  2400      1391          move.l    D0,D2
08000BCE  2042      1392          move.l    D2,A0
08000BD0  4210      1393          clr.b     (A0)
08000BD2  2004      1394          move.l    D4,D0
                    1395   ultoa_4:
08000BD4  4CDF 001C 1396          movem.l   (A7)+,D2/D3/D4
08000BD8  4E5E      1397          unlk      A6
08000BDA  4E75      1398          rts
                    1399   _itoa:
08000BDC  4E56 0000 1400          link      A6,#0
08000BE0  2F2E 0010 1401          move.l    16(A6),-(A7)
08000BE4  2F2E 000C 1402          move.l    12(A6),-(A7)
08000BE8  2F2E 0008 1403          move.l    8(A6),-(A7)
08000BEC  4EB9 0800 1404          jsr       _ltoa
08000BF0  0B0C      
08000BF2  DEFC 000C 1405          add.w     #12,A7
08000BF6  4E5E      1406          unlk      A6
08000BF8  4E75      1407          rts
                    1408   ULMUL:
08000BFA  4E56 0000 1409          link    A6,#0
08000BFE  48E7 C000 1410          movem.l D0/D1,-(A7)
08000C02  222E 0008 1411          move.l  8(A6),D1
08000C06  202E 000C 1412          move.l  12(A6),D0
08000C0A  602C      1413          bra.s   lmul_3
                    1414   LMUL:
08000C0C  4E56 0000 1415          link    A6,#0
08000C10  48E7 C000 1416          movem.l D0/D1,-(A7)
08000C14  222E 0008 1417          move.l  8(A6),D1
08000C18  202E 000C 1418          move.l  12(A6),D0
08000C1C  4A80      1419          tst.l   D0
08000C1E  6A0A      1420          bpl.s   lmul_1
08000C20  4480      1421          neg.l   D0
08000C22  4A81      1422          tst.l   D1
08000C24  6A0A      1423          bpl.s   lmul_2
08000C26  4481      1424          neg.l   D1
08000C28  600E      1425          bra.s   lmul_3
                    1426   lmul_1:
08000C2A  4A81      1427          tst.l   D1
08000C2C  6A0A      1428          bpl.s   lmul_3
08000C2E  4481      1429          neg.l   D1
                    1430   lmul_2:
08000C30  6114      1431          bsr.s   domul
08000C32  4481      1432          neg.l   D1
08000C34  4080      1433          negx.l  D0
08000C36  6002      1434          bra.s   lmul_4
                    1435   lmul_3:
08000C38  610C      1436          bsr.s   domul
                    1437   lmul_4:
08000C3A  2D41 0008 1438          move.l  D1,8(A6)
08000C3E  4CDF 0003 1439          movem.l (A7)+,D0/D1
08000C42  4E5E      1440          unlk    A6
08000C44  4E75      1441          rts
                    1442   domul:
08000C46  0C81 0000 1443          cmpi.l  #$FFFF,D1
08000C4A  FFFF      
08000C4C  620C      1444          bhi.s   domul_1
08000C4E  0C80 0000 1445          cmpi.l  #$FFFF,D0
08000C52  FFFF      
08000C54  620E      1446          bhi.s   domul_2
08000C56  C2C0      1447          mulu    D0,D1
08000C58  4E75      1448          rts
                    1449   domul_1:
08000C5A  0C80 0000 1450          cmpi.l  #$FFFF,D0
08000C5E  FFFF      
08000C60  6218      1451          bhi.s   domul_4
08000C62  6002      1452          bra.s   domul_3
                    1453   domul_2
08000C64  C141      1454          exg     D0,D1
                    1455   domul_3:
08000C66  2F02      1456          move.l  D2,-(A7)
08000C68  2401      1457          move.l  D1,D2
08000C6A  4842      1458          swap    D2
08000C6C  C2C0      1459          mulu    D0,D1
08000C6E  C4C0      1460          mulu    D0,D2
08000C70  4842      1461          swap    D2
08000C72  4242      1462          clr.w   D2
08000C74  D282      1463          add.l   D2,D1
08000C76  241F      1464          move.l  (A7)+,D2
08000C78  4E75      1465          rts
                    1466   domul_4:
08000C7A  48E7 3000 1467          movem.l D2/D3,-(A7)
08000C7E  2401      1468          move.l  D1,D2
08000C80  2601      1469          move.l  D1,D3
08000C82  C2C0      1470          mulu    D0,D1
08000C84  4842      1471          swap    D2
08000C86  C4C0      1472          mulu    D0,D2
08000C88  4840      1473          swap    D0
08000C8A  C6C0      1474          mulu    D0,D3
08000C8C  D483      1475          add.l   D3,D2
08000C8E  4842      1476          swap    D2
08000C90  4242      1477          clr.w   D2
08000C92  D282      1478          add.l   D2,D1
08000C94  4CDF 000C 1479          movem.l (A7)+,D2/D3
08000C98  4E75      1480          rts
                    1481   _strlen:
08000C9A  206F 0004 1482          move.l    (4,A7),A0
08000C9E  2248      1483          move.l    A0,A1
                    1484   strlen_1:
08000CA0  4A19      1485          tst.b     (A1)+
08000CA2  66FC      1486          bne       strlen_1
08000CA4  2009      1487          move.l    A1,D0
08000CA6  9088      1488          sub.l     A0,D0
08000CA8  5380      1489          subq.l    #1,D0
08000CAA  4E75      1490          rts
                    1491   _putch:
08000CAC  4E56 0000 1492          link      A6,#0
08000CB0  2F02      1493          move.l    D2,-(A7)
08000CB2  242E 0008 1494          move.l    8(A6),D2
08000CB6  0C82 0000 1495          cmp.l     #10,D2
08000CBA  000A      
08000CBC  660C      1496          bne.s     putch_1
08000CBE  4878 000D 1497          pea       13
08000CC2  4EB9 0800 1498          jsr       __putch
08000CC6  013E      
08000CC8  584F      1499          addq.w    #4,A7
                    1500   putch_1:
08000CCA  2F02      1501          move.l    D2,-(A7)
08000CCC  4EB9 0800 1502          jsr       __putch
08000CD0  013E      
08000CD2  584F      1503          addq.w    #4,A7
08000CD4  2002      1504          move.l    D2,D0
08000CD6  241F      1505          move.l    (A7)+,D2
08000CD8  4E5E      1506          unlk      A6
08000CDA  4E75      1507          rts
                    1508   _toupper:
08000CDC  202F 0004 1509          move.l    4(A7),D0
08000CE0  0C80 0000 1510          cmp.l     #'a',D0
08000CE4  0061      
08000CE6  6D0E      1511          blt.s     toupper_1
08000CE8  0C80 0000 1512          cmp.l     #'z',D0
08000CEC  007A      
08000CEE  6E06      1513          bgt.s     toupper_1
08000CF0  0480 0000 1514          sub.l     #$20,D0
08000CF4  0020      
                    1515   toupper_1:
08000CF6  4E75      1516          rts
                    1517   _strcpy:
08000CF8  206F 0004 1518          move.l    (4,A7),A0
08000CFC  226F 0008 1519          move.l    (8,A7),A1
08000D00  2008      1520          move.l    A0,D0
                    1521   strcpy_1:
08000D02  10D9      1522          move.b    (A1)+,(A0)+
08000D04  66FC      1523          bne.s     strcpy_1
08000D06  4E75      1524          rts
                    1525   ULDIV:
08000D08  4E56 0000 1526          link    A6,#0
08000D0C  48E7 C000 1527          movem.l D0/D1,-(A7)
08000D10  222E 0008 1528          move.l  8(A6),D1
08000D14  202E 000C 1529          move.l  12(A6),D0
08000D18  6036      1530          bra.s   ldiv_3
                    1531   LDIV:
08000D1A  4E56 0000 1532          link    A6,#0
08000D1E  48E7 C000 1533          movem.l D0/D1,-(A7)
08000D22  222E 0008 1534          move.l  8(A6),D1
08000D26  202E 000C 1535          move.l  12(A6),D0
08000D2A  4A80      1536          tst.l   D0
08000D2C  6A0E      1537          bpl.s   ldiv_1
08000D2E  4480      1538          neg.l   D0
08000D30  4A81      1539          tst.l   D1
08000D32  6A14      1540          bpl.s   ldiv_2
08000D34  4481      1541          neg.l   D1
08000D36  612A      1542          bsr.s   dodiv
08000D38  4481      1543          neg.l   D1
08000D3A  6016      1544          bra.s   ldiv_4
                    1545   ldiv_1:
08000D3C  4A81      1546          tst.l   D1
08000D3E  6A10      1547          bpl.s   ldiv_3
08000D40  4481      1548          neg.l   D1
08000D42  611E      1549          bsr.s   dodiv
08000D44  4480      1550          neg.l   D0
08000D46  600A      1551          bra.s   ldiv_4
                    1552   ldiv_2:
08000D48  6118      1553          bsr.s   dodiv
08000D4A  4480      1554          neg.l   D0
08000D4C  4481      1555          neg.l   D1
08000D4E  6002      1556          bra.s   ldiv_4
                    1557   ldiv_3:
08000D50  6110      1558          bsr.s   dodiv
                    1559   ldiv_4:
08000D52  2D40 0008 1560          move.l  D0,8(A6)
08000D56  2D41 000C 1561          move.l  D1,12(A6)
08000D5A  4CDF 0003 1562          movem.l (A7)+,D0/D1
08000D5E  4E5E      1563          unlk    A6
08000D60  4E75      1564          rts
                    1565   dodiv:
08000D62  0C81 0000 1566          cmpi.l  #$FFFF,D1
08000D66  FFFF      
08000D68  6236      1567          bhi.s   dodiv_2
08000D6A  0C80 0000 1568          cmpi.l  #$FFFF,D0
08000D6E  FFFF      
08000D70  6210      1569          bhi.s   dodiv_1
08000D72  80C1      1570          divu    D1,D0
08000D74  2200      1571          move.l  D0,D1
08000D76  4241      1572          clr.w   D1
08000D78  4841      1573          swap    D1
08000D7A  0280 0000 1574          andi.l  #$FFFF,D0
08000D7E  FFFF      
08000D80  4E75      1575          rts
                    1576   dodiv_1:
08000D82  48A7 A000 1577          movem.w D0/D2,-(A7)
08000D86  4240      1578          clr.w   D0
08000D88  4840      1579          swap    D0
08000D8A  80C1      1580          divu    D1,D0
08000D8C  3400      1581          move.w  D0,D2
08000D8E  301F      1582          move.w  (A7)+,D0
08000D90  80C1      1583          divu    D1,D0
08000D92  4840      1584          swap    D0
08000D94  4281      1585          clr.l   D1
08000D96  3200      1586          move.w  D0,D1
08000D98  3002      1587          move.w  D2,D0
08000D9A  4840      1588          swap    D0
08000D9C  341F      1589          move.w  (A7)+,D2
08000D9E  4E75      1590          rts
                    1591   dodiv_2:
08000DA0  48E7 3800 1592          movem.l D2/D3/D4,-(A7)
08000DA4  2401      1593          move.l  D1,D2
08000DA6  4242      1594          clr.w   D2
08000DA8  4842      1595          swap    D2
08000DAA  5282      1596          addq.l  #1,D2
08000DAC  2600      1597          move.l  D0,D3
08000DAE  2801      1598          move.l  D1,D4
08000DB0  2202      1599          move.l  D2,D1
08000DB2  61CE      1600          bsr.s   dodiv_1
08000DB4  2204      1601          move.l  D4,D1
08000DB6  82C2      1602          divu    D2,D1
08000DB8  80C1      1603          divu    D1,D0
08000DBA  0280 0000 1604          andi.l  #$FFFF,D0
08000DBE  FFFF      
                    1605   dodiv_3:
08000DC0  2204      1606          move.l  D4,D1
08000DC2  2404      1607          move.l  D4,D2
08000DC4  4842      1608          swap    D2
08000DC6  C2C0      1609          mulu    D0,D1
08000DC8  C4C0      1610          mulu    D0,D2
08000DCA  4842      1611          swap    D2
08000DCC  D282      1612          add.l   D2,D1
08000DCE  9283      1613          sub.l   D3,D1
08000DD0  620A      1614          bhi.s   dodiv_4
08000DD2  4481      1615          neg.l   D1
08000DD4  B881      1616          cmp.l   D1,D4
08000DD6  6208      1617          bhi.s   dodiv_5
08000DD8  5280      1618          addq.l  #1,D0
08000DDA  60E4      1619          bra.s   dodiv_3
                    1620   dodiv_4:
08000DDC  5380      1621          subq.l  #1,D0
08000DDE  60E0      1622          bra.s   dodiv_3
                    1623   dodiv_5:
08000DE0  4CDF 001C 1624          movem.l (A7)+,D2/D3/D4
08000DE4  4E75      1625          rts
                    1626          section   const
08000DE6            1627                   align
                    1628   
                    1629   
                    1630   @m68kus~1_1:
08000DE6  0D0A 4269 1631          dc.b      13,10,66,105,103,32,66,114,111,116,104,101,114
08000DEA  6720 4272 
08000DEE  6F74 6865 
08000DF2  72        
08000DF3  2069 7320 1632          dc.b      32,105,115,32,119,97,116,99,104,105,110,103
08000DF7  7761 7463 
08000DFB  6869 6E67 
08000DFF  2079 6F75 1633          dc.b      32,121,111,117,0
08000E03  00        
                    1634   @itoa_1:
08000E04  2D32 3134 1635          dc.b      45,50,49,52,55,52,56,51,54,52,56,0
08000E08  3734 3833 
08000E0C  3634 3800 
                    1636   __ctype:
08000E10  0040 4040 1637          dc.b      0,64,64,64,64,64,64,64,64,64,80,80,80,80,80
08000E14  4040 4040 
08000E18  4040 5050 
08000E1C  5050 50   
08000E1F  4040 4040 1638          dc.b      64,64,64,64,64,64,64,64,64,64,64,64,64,64,64
08000E23  4040 4040 
08000E27  4040 4040 
08000E2B  4040 40   
08000E2E  4040 40D0 1639          dc.b      64,64,64,208,160,160,160,160,160,160,160,160
08000E32  A0A0 A0A0 
08000E36  A0A0 A0A0 
08000E3A  A0A0 A0A0 1640          dc.b      160,160,160,160,160,160,160,140,140,140,140
08000E3E  A0A0 A08C 
08000E42  8C8C 8C   
08000E45  8C8C 8C8C 1641          dc.b      140,140,140,140,140,140,160,160,160,160,160
08000E49  8C8C A0A0 
08000E4D  A0A0 A0   
08000E50  A0A0 8A8A 1642          dc.b      160,160,138,138,138,138,138,138,130,130,130
08000E54  8A8A 8A8A 
08000E58  8282 82   
08000E5B  8282 8282 1643          dc.b      130,130,130,130,130,130,130,130,130,130,130
08000E5F  8282 8282 
08000E63  8282 82   
08000E66  8282 8282 1644          dc.b      130,130,130,130,130,130,160,160,160,160,160
08000E6A  8282 A0A0 
08000E6E  A0A0 A0   
08000E71  A089 8989 1645          dc.b      160,137,137,137,137,137,137,129,129,129,129
08000E75  8989 8981 
08000E79  8181 81   
08000E7C  8181 8181 1646          dc.b      129,129,129,129,129,129,129,129,129,129,129
08000E80  8181 8181 
08000E84  8181 81   
08000E87  8181 8181 1647          dc.b      129,129,129,129,129,160,160,160,160,64,0,0,0
08000E8B  81A0 A0A0 
08000E8F  A040 0000 
08000E93  00        
08000E94  0000 0000 1648          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08000E98  0000 0000 
08000E9C  0000 0000 
08000EA0  0000 0000 
08000EA4  0000 0000 
08000EA8  0000      
08000EAA  0000 0000 1649          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08000EAE  0000 0000 
08000EB2  0000 0000 
08000EB6  0000 0000 
08000EBA  0000 0000 
08000EBE  0000      
08000EC0  0000 0000 1650          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08000EC4  0000 0000 
08000EC8  0000 0000 
08000ECC  0000 0000 
08000ED0  0000 0000 
08000ED4  0000      
08000ED6  0000 0000 1651          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08000EDA  0000 0000 
08000EDE  0000 0000 
08000EE2  0000 0000 
08000EE6  0000 0000 
08000EEA  0000      
08000EEC  0000 0000 1652          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08000EF0  0000 0000 
08000EF4  0000 0000 
08000EF8  0000 0000 
08000EFC  0000 0000 
08000F00  0000      
08000F02  0000 0000 1653          dc.b      0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
08000F06  0000 0000 
08000F0A  0000 0000 
08000F0E  0000 00   
                    1654          section   data
08000F12            1655                   align
                    1656   
                    1657   *********************************************************************************************************************************************************
                    1658   * Section for Initialised Data (in theory should be copied to Ram at startup) but is part of program code as we copy whole program to ram at startup
                    1659   ********************************************************************************************************************************************************
                    1660   
          0800 0F12 1661   DataStart       equ       *
08000F12            1662   __ungetbuf:     ds.l      1                    ungetbuffer for stdio functions
08000F16            1663   __allocp:       ds.l      1                    start of free memory block list
08000F1A            1664   __heap:         ds.l      1                    begin of free memory
                    1665   
                    1666   
                    1667          section   bss
08000F1E            1668                   align
                    1669   
          0800 0F1E 1670   DataEnd         equ       *                    this label will equate to the address of the last byte of global variable in it
          0000 000C 1671   DataLength      equ       DataEnd-DataStart    length of data needed to copy to Ram on bootup
                    1672   
                    1673   *********************************************************************************************************
                    1674   * Section for uninitialised Data which is set to zero, i.e. we should set this space to zero at starup
                    1675   *********************************************************************************************************
          0800 0F1E 1676   BssStart       equ       *
                    1677   
                    1678   _i:
08000F1E            1679          ds.b      4
                    1680   _x:
08000F22            1681          ds.b      4
                    1682   _y:
08000F26            1683          ds.b      4
                    1684   _z:
08000F2A            1685          ds.b      4
                    1686   _PortA_Count:
08000F2E            1687          ds.b      4
                    1688   _Timer1Count:
08000F32            1689          ds.b      1
                    1690   _Timer2Count:
08000F34            1691          ds.b      1
                    1692   _Timer3Count:
08000F36            1693          ds.b      1
                    1694   _Timer4Count:
08000F38            1695          ds.b      1
                    1696          section   heap
08000F3A            1697                  align
                    1698   
          0800 0F3A 1699   BssEnd         equ       *
          0000 001C 1700   BssLength      equ       BssEnd-BssStart       length of zeroed data needed to copy to Ram on bootup
                    1701   
                    1702   *********************************************************************************************************
                    1703   * Section for Heap
                    1704   *********************************************************************************************************
                    1705   
          0800 0F3A 1706   heap           equ       *
08000F3A            1707                  align
          0800 0000

Assembly errors: 0
